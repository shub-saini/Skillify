// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(uuid())
  clerkId String
  courses Course[] @relation("CoursePurchases") // Many-to-many relation with Course

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clerkId])
}

model Creator {
  id          String  @id @default(uuid())
  clerkId     String  @unique
  name        String?
  imageUrl    String?
  profession  String?
  linkedinUrl String?
  about       String?

  courses Course[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clerkId])
}

model Course {
  id            String    @id @default(uuid())
  creatorId     String
  creator       Creator   @relation(fields: [creatorId], references: [clerkId])
  title         String?
  amount        Int       @default(0)
  description   String?   @db.Text
  imageUrl      String?
  published     Boolean   @default(false)
  videoChapters Chapter[]
  users         User[]    @relation("CoursePurchases")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([creatorId])
}

model Chapter {
  id          String  @id @default(uuid())
  courseId    String
  course      Course  @relation(fields: [courseId], references: [id])
  name        String
  description String?
  published   Boolean @default(false)
  freePreview Boolean @default(false)
  order       Int
  video       Video?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId, order])
}

model Video {
  id        String  @id @default(uuid())
  chapterId String  @unique
  chapter   Chapter @relation(fields: [chapterId], references: [id])

  status      String
  assetId     String? @unique
  playbackId  String? @unique
  passthrough String  @unique
  uploadId    String  @unique
  teacherId   String
  duration    Float?
  aspectRatio String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chapterId])
}
